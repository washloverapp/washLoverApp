plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
}

import java.util.Properties
import java.io.FileInputStream

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("key.properties")
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "com.mplus.my_flutter_mapwash"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
        freeCompilerArgs += "-Xlint:deprecation"
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.mplus.my_flutter_mapwash"
        minSdk = 23  // เปลี่ยนจาก flutter.minSdkVersion เป็น 23
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        // minSdk = flutter.minSdkVersion
        targetSdk = 34
        versionCode = 1
        versionName = '1.0.1'
    }

    signingConfigs {
        release {
            if (keystoreProperties['storeFile']) {
                storeFile file(keystoreProperties['storeFile'])
            }
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }
    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now,
            // so `flutter run --release` works.
            signingConfig = signingConfigs.getByName("debug")
            signingConfig = signingConfigs.getByName("release")
        }
    }
}

dependencies {
  // Import the Firebase BoM (Bill of Materials)
  implementation platform("com.google.firebase:firebase-bom:33.7.0")
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  // Add Firebase Analytics (ไม่ต้องระบุเวอร์ชัน เพราะ BoM จะจัดการให้)
  implementation("com.google.firebase:firebase-analytics")

  implementation("com.google.android.material:material:1.12.0")
  // เพิ่ม Firebase SDK อื่นๆ ที่คุณต้องการใช้
  // ตัวอย่างเช่น Firebase Realtime Database
  // implementation("com.google.firebase:firebase-database")
}


flutter {
    source = "../.."
}
apply plugin: 'com.google.gms.google-services'  // ต้องใส่บรรทัดนี้เพื่อให้ Firebase ทำงาน
